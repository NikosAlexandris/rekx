[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[project]
name = "rekx"
dynamic = ["version"]
description = "Interactive command line interface to Kerchunk and tooling for data chunking"
readme = "ReadMe.md"
authors = [
  { name = 'Nikos Alexandris', email = 'nikosalexandris@duck.com' },
]
requires-python = ">=3.11"
dependencies = [
  "loguru",
  "typer",  # Already included
  "rich",   # Already included
  "kerchunk @ git+https://github.com/fsspec/kerchunk.git@b9659c32449539ef6addcb7a12520715cecf3253",
  "fsspec @ git+https://github.com/NikosAlexandris/filesystem_spec",
  "netcdf4",
  "h5py",
  "pandas",
  "xarray",
  "xarray_extras",
  "humanize",
  "dask",
  "pydantic",
  "fastparquet",
]
classifiers = [
    'Development Status :: 3 - Alpha',
    'Environment :: Console',
    'Intended Audience :: Science/Research',
    # 'License :: OSI Approved :: European Union Public License 1.2 (EUPL 1.2)',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3',
    'Topic :: Scientific/Engineering :: Information Analysis'
]
license = "EUPL-1.2"
keywords = [
  "rekx",
  "Kerchunk",
  "chunks",
  "chunking",
]

[project.optional-dependencies]
dev = [
  "devtools",  # move to optional dependencies ?
  "pytest",
  "black",
  "flake8"
]
docs = [
  "mkdocs-material",
  "mkdocs-table-reader-plugin",
  "mkdocs-exclude",
  "mkdocstrings[python]"
  "mkdocs-bibtex",
]


[project.urls]
homepage = "https://github.com/NikosAlexandris/rekx"
issues = "https://github.com/NikosAlexandris/rekx/issues"
repository = 'https://github.com/NikosAlexandris/rekx'

[project.scripts]
rekx = "rekx.cli:app"

[tool.hatch.version]
source = "vcs"
path = "rekx/_version.py"

[tool.towncrier]
# https://towncrier.readthedocs.io/en/stable/#quick-start
package = "rekx"
package_dir = "rekx"
name = "rekx"

[tool.pylint.MASTER]
# Ensure `duplicate-code` and any other errors that depend on not running in
# parallel are reported:
jobs = 1
enable-all-extensions = true
output-format = "colorized"
ignore-paths = [
# Managed by tools, best to use `# pylint: disable=...` inline comments for any
# other ignores.
    ".+/version.py",
    ".*/.+/version.py",
]
# Extend linting to usage of trusted extension packages
extension-pkg-allow-list = ["lxml"]

[tool.pylint.TYPECHECK]
# Ignore false negatives from external packages
ignored-classes = ["lxml.etree.QName.localname"]
# Match Black's defaults
# https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#pylint

[tool.pylint.format]
max-line-length = "88"

[tool.pylint."messages control"]
# Workaround Prospector bug with PyLint:
# https://github.com/PyCQA/prospector/issues/596#issue-1592499675
disable = ["relative-beyond-top-level"]

[[tool.mypy.overrides]]
module = ["argcomplete"]
ignore_missing_imports = true

[tool.vulture]
# https://github.com/jendrikseipp/vulture#ignoring-files
exclude = ["rekx/version.py"]

[tool.isort]
# Match Black's defaults
# https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#isort
profile = "black"

[tool.pytest.ini_options]
addopts = "-ra --verbose --showlocals --tb=short"
testpaths = ["tests"]
log_cli = true
filterwarnings = [
    'ignore:distutils Version classes are deprecated. Use packaging.version instead:DeprecationWarning',
    'ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning',
]
